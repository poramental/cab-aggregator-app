plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.modsen'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

test {
    ignoreFailures = true
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

}
ext{
    modelmapperVersion = '3.2.0'
    validationVersion =  '3.2.1'
    feignClientVersion = '4.1.0'
    kafkaVersion = '3.1.1'
    testContainersVersion = '1.19.4'
    restAssuredVersion = '5.4.0'
    set('springCloudVersion', "2023.0.0")
    circuitBreakerVrsion = '3.1.0'
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.modelmapper:modelmapper:${modelmapperVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${validationVersion}"
    implementation "org.springframework.kafka:spring-kafka:${kafkaVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${feignClientVersion}"
    testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation 'org.projectlombok:lombok'
    implementation "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:${circuitBreakerVrsion}"
    compileOnly "org.springframework.boot:spring-boot-starter-actuator"
    compileOnly 'io.micrometer:micrometer-registry-prometheus'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
